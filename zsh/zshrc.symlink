# shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/src

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

unset config_files

# Better history
# Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="geometry/geometry"

GEOMETRY_PROMPT_PLUGINS=(exec_time git hg virtualenv jobs)
GEOMETRY_PROMPT_PREFIX=""
PROMPT_GEOMETRY_GIT_TIME=false
PROMPT_GEOMETRY_GIT_CONFLICTS=true

# Red dots are displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(ansible archlinux git gitignore docker virtualenv python pass mosh colored-man-pages)

source $ZSH/oh-my-zsh.sh

# Rehash the completion database on every command
zstyle ':completion:*' rehash true

# Escape shell symbols in scp
zstyle -e :urlglobber url-other-schema '[[ $words[1] == scp || $words[1] == rsync ]] && reply=("*") || reply=(http https ftp)'

# My shell supports 256 colors
[ $TERM = "xterm" ] && export TERM="xterm-256color"
[ $TERM = "screen-bce" ] && export TERM="screen-256color"

# Ensure gpgagent uses the right TTY
echo UPDATESTARTUPTTY | gpg-connect-agent 2>&1 >/dev/null
[ -f /usr/share/virtualenvwrapper/virtualenvwrapper.sh ] && source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
[ -f /usr/bin/virtualenvwrapper.sh ] && source /usr/bin/virtualenvwrapper.sh

# Use gpg-agent for SSH authentication
[ -r /run/user/$(id -u)/gnupg/S.gpg-agent.ssh ] && export SSH_AUTH_SOCK=/run/user/$(id -u)/gnupg/S.gpg-agent.ssh

# Make sure less can read binary files
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# Allow the use of travis
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh

# Use fzf to find files quickly
if [ -d /usr/share/fzf ]; then
  source /usr/share/fzf/key-bindings.zsh
  source /usr/share/fzf/completion.zsh
  if [ -x /usr/bin/ag ]; then
    export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
  fi
fi

export EDITOR=vim
export VISUAL=$EDITOR
alias vi=vim

gen_ansible_pw () {
  local vault_opts=""
  if [ ! -z "$2" ]
  then
    vault_opts="--stdin-name=$2"
  fi
  pwgen -sy "$1" 1 | ansible-vault encrypt_string $vault_opts
}


alias pdns-configure-auth="./configure --with-modules='bind gsqlite3 gmysql pipe' --without-dynmodules --enable-unit-tests --enable-tools --enable-libsodium"
alias pdns-configure-recursor="./configure --enable-unit-tests --enable-libsodium"
alias pdns-configure-dnsdist="./configure --enable-libsodium --enable-dnscrypt --enable-unit-tests"

alias pdns-ansible-playbook="ansible-playbook -f 3 -u pieter -e \"ansible_sudo_pass=\\\"{{ lookup('pipe', 'pass PowerDNS/sudo') }}\\\"\""
alias pdns-ansible="ansible -u pieter -e \"ansible_sudo_pass=\\\"{{ lookup('pipe', 'pass PowerDNS/sudo') }}\\\"\""

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=05:quote=05'
export PATH="/usr/lib/ccache/bin:$PATH"
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel'

export GOPATH=$HOME/src/go
export PATH=$PATH:$GOPATH/bin:$HOME/.node_modules/bin
export npm_config_prefix=$HOME/.node_modules
